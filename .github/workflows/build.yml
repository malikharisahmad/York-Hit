name: Build Kivy APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Install dependencies
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            unzip \
            wget \
            openjdk-11-jdk \
            python3-pip \
            git \
            rsync \
            autoconf \
            automake \
            libtool \
            pkg-config \
            build-essential \
            cmake \
            zlib1g-dev \
            libffi-dev \
            libssl-dev

      # Set Java 11 as default
      - name: Set Java 11
        run: |
          sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-11-openjdk-amd64/bin/java 1
          sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV

      # Install Android SDK Command Line Tools
      - name: Install Android SDK
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdtools.zip
          unzip cmdtools.zip -d cmdline-tools
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/
          echo "ANDROIDSDK=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROIDNDK=$HOME/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/build-tools/34.0.0" >> $GITHUB_PATH
          echo "$HOME/android-sdk/build-tools/33.0.2" >> $GITHUB_PATH

      # Install SDK packages (Android 34 + 33) and symlink for Buildozer
      - name: Install SDK packages
        run: |
          yes | sdkmanager --sdk_root=$HOME/android-sdk \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "platforms;android-33" \
            "build-tools;33.0.2"
          yes | sdkmanager --licenses --sdk_root=$HOME/android-sdk

          # Symlink SDK into Buildozer's expected path
          mkdir -p $HOME/.buildozer/android/platform
          rm -rf $HOME/.buildozer/android/platform/android-sdk
          ln -s $HOME/android-sdk $HOME/.buildozer/android/platform/android-sdk

          # Create fake "tools/bin" so Buildozer finds sdkmanager
          mkdir -p $HOME/.buildozer/android/platform/android-sdk/tools/bin
          ln -sf $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager $HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager

      # Install buildozer and dependencies
      - name: Install Buildozer and Python dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython
          pip install kivy matplotlib pillow requests

      # Build debug APK (force SDK + NDK paths)
      - name: Build APK
        run: |
          export ANDROIDSDK=$HOME/.buildozer/android/platform/android-sdk
          export ANDROIDNDK=$HOME/.buildozer/android/platform/android-ndk-r25b
          export PATH=$ANDROIDSDK/platform-tools:$ANDROIDSDK/build-tools/34.0.0:$ANDROIDSDK/build-tools/33.0.2:$PATH
          buildozer -v android debug

      # Upload APK as artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: york-hit-debug-apk
          path: bin/*.apk